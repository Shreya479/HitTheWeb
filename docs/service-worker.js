(function () {
    // Set this to true for production
    var cacheName = 'morning-cache-v1';

    // Delete old caches that are not our current one!
    self.addEventListener("activate", event => {
        const cacheWhitelist = [cacheName];
        event.waitUntil(caches.keys().then(keyList => Promise.all(keyList.map(key => {
            if (!cacheWhitelist.includes(key)) {
                // Deleting cache <key>
                return caches.delete(key);
            }
        }))));
    });

    // The first time the user starts up the PWA, 'install' is triggered.
    self.addEventListener('install', function (event) {
        event.waitUntil(caches.open(cacheName).then(function (cache) {
            // Open a cache and cache our files
            // We want to cache the page and the main.js generated by webpack
            // We could also cache any static assets like CSS or images
            const urlsToCache = [
                "/",
                "/css/main.css",
                "/js/main.js",
                "/register-service-worker.js",
                "/service-worker.js",
                "/js/service-worker.js",
                "/img/bg/bg.jpg",
                "/img/ico/duckduckgo.png",
                "/img/ico/ebay.png",
                "/img/ico/facebook.png",
                "/img/ico/google.png",
                "/img/ico/linkedin.png",
                "/img/ico/qwant.png",
                "/img/ico/reddit.png",
                "/img/ico/soundcloud.png",
                "/img/ico/steam.png",
                "/img/ico/torrentz.png",
                "/img/ico/wikipedia.png",
                "/img/ico/youtube.png",
                "/img/logo.png",
                "/img/logo_192x192.png",
                "/img/favicon.png",
                "/index.html",
                "/nostorage.html"
            ];
            cache.addAll(urlsToCache);
            // Cached
            console.log("Cached");
        }));
    });

    // When the webpage goes to fetch files, we intercept that request and serve up the matching files
    // if we have them
    self.addEventListener('fetch', function (event) {
        event.respondWith(caches.match(event.request).then(function (response) {
            return response || fetch(event.request);
        }));
    });
})();